{"mappings":"AAAA,MAAM,QAAQ,SAAS,aAAa,CAAC;AAErC,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,MAAM,OAAO,UAAU,CAAC;AAE9B,MAAM,aAAa,SAAS,aAAa,CAAC;AAC1C,MAAM,UAAU,OAAO,UAAU,CAAC;AAElC,MAAM,eAAe,IAAI,OAAO,YAAY;AAC5C,QAAQ,GAAG,CAAC,OAAO,QAAQ,YAAY;AAEvC,qDAAqD;AAErD,eAAe;IACX,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;QACrD,OAAO;YAAC,OAAO;YAAM,QAAQ;QAAG;IACpC;IACA,MAAM,SAAS,GAAG,QAAQ,qCAAqC;IAC/D,MAAM,MAAM,IAAI;AACpB;AACA","sources":["pixelated-face.js"],"sourcesContent":["const video = document.querySelector('.webcam');\r\n\r\nconst canvas = document.querySelector('.video');\r\nconst ctx = canvas.getContext('2d');\r\n\r\nconst faceCanvas = document.querySelector('.face');\r\nconst faceCtx = canvas.getContext('2d');\r\n\r\nconst faceDetector = new window.FaceDetector();\r\nconsole.log(video, canvas, faceCanvas, faceDetector);\r\n\r\n//write a function that will populate the users video\r\n\r\nasync function populateVideo() {\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {width: 1280, height: 720},\r\n    });\r\n    video.srcObject = stream; //since is a stream you do src.Object\r\n    await video.play();\r\n}\r\npopulateVideo();"],"names":[],"version":3,"file":"face.78b1ac0f.js.map","sourceRoot":"/__parcel_source_root/"}